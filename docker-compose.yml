
services:
  frontend:
    build: .
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    restart: unless-stopped
    container_name: feedback-frontend
    depends_on:
      - backend
    
  backend:
    build: ./backend
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgres://feedback_user:feedback_pass@db:5432/feedback_db
      - PORT=4000
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    container_name: feedback-backend
    volumes:
      - ./backend/src/db-init.sql:/app/src/db-init.sql

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: feedback_user
      POSTGRES_PASSWORD: feedback_pass
      POSTGRES_DB: feedback_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/src/db-init.sql:/docker-entrypoint-initdb.d/01-init.sql
    container_name: feedback-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U feedback_user -d feedback_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
